{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","visibleGoods","goods","sort","g1","g2","localeCompare","length","console","log","getReorderedGoods","resetEnabled","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAGIQ,KAAKX,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIU,EApEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAGE,cAAcD,GAE1B,KAAKnB,EAASW,OACZ,OAAOO,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITjB,GACFW,EAAaH,UAIfU,QAAQC,IAAIlB,EAAUD,GAEfW,EA0CgBS,CACnBvB,EACA,CAAEI,WAAUD,eAGRqB,EAAerB,GAAcC,IAAaL,EAASM,KAEzD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAASf,KAAKP,eANhB,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAASf,KAAKJ,aANhB,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaxB,IAEjByB,QAASf,KAAKF,QANhB,qBAWCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAzFrB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9439f04c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    const resetEnabled = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetEnabled && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}